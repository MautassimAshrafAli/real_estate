//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 11/17/2023 5:10:10 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Data.Entity;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("REALESTATEModel_ora", "SYS_C007816", "Category", RelationshipMultiplicity.ZeroOrOne, typeof(REALESTATEModel_ora.Category), "Properties", RelationshipMultiplicity.Many, typeof(REALESTATEModel_ora.Property), true)]
[assembly: EdmRelationshipAttribute("REALESTATEModel_ora", "SYS_C007817", "AgentInfo", RelationshipMultiplicity.ZeroOrOne, typeof(REALESTATEModel_ora.AgentInfo), "Properties", RelationshipMultiplicity.Many, typeof(REALESTATEModel_ora.Property), true)]
[assembly: EdmRelationshipAttribute("REALESTATEModel_ora", "SYS_C007818", "Property", RelationshipMultiplicity.ZeroOrOne, typeof(REALESTATEModel_ora.Property), "PropertiesInfos", RelationshipMultiplicity.Many, typeof(REALESTATEModel_ora.PropertiesInfo), true)]

#endregion

namespace REALESTATEModel_ora
{

    #region REALESTATEEntities_ora

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class REALESTATEEntities_ora : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new REALESTATEEntities_ora object.
        /// </summary>
        public REALESTATEEntities_ora() :
                base(@"name=REALESTATEEntitiesConnectionString", "REALESTATEEntities_ora")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new REALESTATEEntities_ora object using the connection string found in the 'REALESTATEEntities_ora' section of the application configuration file.
        /// </summary>
        public REALESTATEEntities_ora(string connectionString) :
                base(connectionString, "REALESTATEEntities_ora")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new REALESTATEEntities_ora object.
        /// </summary>
        public REALESTATEEntities_ora(EntityConnection connection) : base(connection, "REALESTATEEntities_ora")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AgentInfo> AgentInfos
        {
            get
            {
                if ((_AgentInfos == null))
                {
                    _AgentInfos = base.CreateObjectSet<AgentInfo>("AgentInfos");
                }
                return _AgentInfos;
            }
        }
        private ObjectSet<AgentInfo> _AgentInfos;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyInfo> CompanyInfos
        {
            get
            {
                if ((_CompanyInfos == null))
                {
                    _CompanyInfos = base.CreateObjectSet<CompanyInfo>("CompanyInfos");
                }
                return _CompanyInfos;
            }
        }
        private ObjectSet<CompanyInfo> _CompanyInfos;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertiesInfo> PropertiesInfos
        {
            get
            {
                if ((_PropertiesInfos == null))
                {
                    _PropertiesInfos = base.CreateObjectSet<PropertiesInfo>("PropertiesInfos");
                }
                return _PropertiesInfos;
            }
        }
        private ObjectSet<PropertiesInfo> _PropertiesInfos;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VALLPROPERTY> VALLPROPERTIES
        {
            get
            {
                if ((_VALLPROPERTIES == null))
                {
                    _VALLPROPERTIES = base.CreateObjectSet<VALLPROPERTY>("VALLPROPERTIES");
                }
                return _VALLPROPERTIES;
            }
        }
        private ObjectSet<VALLPROPERTY> _VALLPROPERTIES;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the AgentInfos EntitySet.
        /// </summary>
        public void AddToAgentInfos(AgentInfo agentInfo)
        {
            base.AddObject("AgentInfos", agentInfo);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyInfos EntitySet.
        /// </summary>
        public void AddToCompanyInfos(CompanyInfo companyInfo)
        {
            base.AddObject("CompanyInfos", companyInfo);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PropertiesInfos EntitySet.
        /// </summary>
        public void AddToPropertiesInfos(PropertiesInfo propertiesInfo)
        {
            base.AddObject("PropertiesInfos", propertiesInfo);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VALLPROPERTIES EntitySet.
        /// </summary>
        public void AddToVALLPROPERTIES(VALLPROPERTY vALLPROPERTY)
        {
            base.AddObject("VALLPROPERTIES", vALLPROPERTY);
        }

        #endregion

        #region Methods

    
        /// <summary>
        /// There are no comments for SPSEARCH in the schema.
        /// </summary>
        public virtual void SPSEARCH (string P_CURRENCY, string P_PROPERTIES_TYPE, string P_CATEGORY_NAME, string P_CITY, decimal? P_BEDROOMS, decimal? P_BATHROOMS, decimal? P_MIN_PRICE, decimal? P_MAX_PRICE, decimal? P_MIN_AREA, decimal? P_MAX_AREA, string P_DISPLAY_TYPE)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

            try {
              using (EntityCommand command = new EntityCommand())
              {
                if (this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"REALESTATEEntities_ora.SPSEARCH";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter P_CURRENCYParameter = new EntityParameter("P_CURRENCY", System.Data.DbType.String);
                P_CURRENCYParameter.Direction = ParameterDirection.Input;
                if (P_CURRENCY != null)
                  P_CURRENCYParameter.Value = P_CURRENCY;
                command.Parameters.Add(P_CURRENCYParameter);
                EntityParameter P_PROPERTIES_TYPEParameter = new EntityParameter("P_PROPERTIES_TYPE", System.Data.DbType.String);
                P_PROPERTIES_TYPEParameter.Direction = ParameterDirection.Input;
                if (P_PROPERTIES_TYPE != null)
                  P_PROPERTIES_TYPEParameter.Value = P_PROPERTIES_TYPE;
                command.Parameters.Add(P_PROPERTIES_TYPEParameter);
                EntityParameter P_CATEGORY_NAMEParameter = new EntityParameter("P_CATEGORY_NAME", System.Data.DbType.String);
                P_CATEGORY_NAMEParameter.Direction = ParameterDirection.Input;
                if (P_CATEGORY_NAME != null)
                  P_CATEGORY_NAMEParameter.Value = P_CATEGORY_NAME;
                command.Parameters.Add(P_CATEGORY_NAMEParameter);
                EntityParameter P_CITYParameter = new EntityParameter("P_CITY", System.Data.DbType.String);
                P_CITYParameter.Direction = ParameterDirection.Input;
                if (P_CITY != null)
                  P_CITYParameter.Value = P_CITY;
                command.Parameters.Add(P_CITYParameter);
                EntityParameter P_BEDROOMSParameter = new EntityParameter("P_BEDROOMS", System.Data.DbType.Decimal);
                P_BEDROOMSParameter.Direction = ParameterDirection.Input;
                if (P_BEDROOMS.HasValue)
                  P_BEDROOMSParameter.Value = P_BEDROOMS;
                command.Parameters.Add(P_BEDROOMSParameter);
                EntityParameter P_BATHROOMSParameter = new EntityParameter("P_BATHROOMS", System.Data.DbType.Decimal);
                P_BATHROOMSParameter.Direction = ParameterDirection.Input;
                if (P_BATHROOMS.HasValue)
                  P_BATHROOMSParameter.Value = P_BATHROOMS;
                command.Parameters.Add(P_BATHROOMSParameter);
                EntityParameter P_MIN_PRICEParameter = new EntityParameter("P_MIN_PRICE", System.Data.DbType.Decimal);
                P_MIN_PRICEParameter.Direction = ParameterDirection.Input;
                if (P_MIN_PRICE.HasValue)
                  P_MIN_PRICEParameter.Value = P_MIN_PRICE;
                command.Parameters.Add(P_MIN_PRICEParameter);
                EntityParameter P_MAX_PRICEParameter = new EntityParameter("P_MAX_PRICE", System.Data.DbType.Decimal);
                P_MAX_PRICEParameter.Direction = ParameterDirection.Input;
                if (P_MAX_PRICE.HasValue)
                  P_MAX_PRICEParameter.Value = P_MAX_PRICE;
                command.Parameters.Add(P_MAX_PRICEParameter);
                EntityParameter P_MIN_AREAParameter = new EntityParameter("P_MIN_AREA", System.Data.DbType.Decimal);
                P_MIN_AREAParameter.Direction = ParameterDirection.Input;
                if (P_MIN_AREA.HasValue)
                  P_MIN_AREAParameter.Value = P_MIN_AREA;
                command.Parameters.Add(P_MIN_AREAParameter);
                EntityParameter P_MAX_AREAParameter = new EntityParameter("P_MAX_AREA", System.Data.DbType.Decimal);
                P_MAX_AREAParameter.Direction = ParameterDirection.Input;
                if (P_MAX_AREA.HasValue)
                  P_MAX_AREAParameter.Value = P_MAX_AREA;
                command.Parameters.Add(P_MAX_AREAParameter);
                EntityParameter P_DISPLAY_TYPEParameter = new EntityParameter("P_DISPLAY_TYPE", System.Data.DbType.String);
                P_DISPLAY_TYPEParameter.Direction = ParameterDirection.Input;
                if (P_DISPLAY_TYPE != null)
                  P_DISPLAY_TYPEParameter.Value = P_DISPLAY_TYPE;
                command.Parameters.Add(P_DISPLAY_TYPEParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for SPALLPROPERTIESBYCURRENCY in the schema.
        /// </summary>
        public virtual ObjectResult<SPALLPROPERTIESBYCURRENCYResult> SPALLPROPERTIESBYCURRENCY (string P_CURRENCY)
        {
            ObjectParameter P_CURRENCYParameter;
            if (P_CURRENCY != null)
            {
                P_CURRENCYParameter = new ObjectParameter("P_CURRENCY", P_CURRENCY);
            }
            else
            {
                P_CURRENCYParameter = new ObjectParameter("P_CURRENCY", typeof(string));
            }
            return base.ExecuteFunction<SPALLPROPERTIESBYCURRENCYResult>("REALESTATEEntities_ora.SPALLPROPERTIESBYCURRENCY", P_CURRENCYParameter);
        }

    
        /// <summary>
        /// There are no comments for SPTOPONEPROPERTIESBYC in the schema.
        /// </summary>
        public virtual ObjectResult<SPALLPROPERTIESBYCURRENCYResult> SPTOPONEPROPERTIESBYC (string P_CURRENCY)
        {
            ObjectParameter P_CURRENCYParameter;
            if (P_CURRENCY != null)
            {
                P_CURRENCYParameter = new ObjectParameter("P_CURRENCY", P_CURRENCY);
            }
            else
            {
                P_CURRENCYParameter = new ObjectParameter("P_CURRENCY", typeof(string));
            }
            return base.ExecuteFunction<SPALLPROPERTIESBYCURRENCYResult>("REALESTATEEntities_ora.SPTOPONEPROPERTIESBYC", P_CURRENCYParameter);
        }

    
        /// <summary>
        /// There are no comments for SPGETPROPERTIESBYID in the schema.
        /// </summary>
        public virtual ObjectResult<SPALLPROPERTIESBYCURRENCYResult> SPGETPROPERTIESBYID (string P_CURRENCY, decimal? PROPERTIE_ID)
        {
            ObjectParameter P_CURRENCYParameter;
            if (P_CURRENCY != null)
            {
                P_CURRENCYParameter = new ObjectParameter("P_CURRENCY", P_CURRENCY);
            }
            else
            {
                P_CURRENCYParameter = new ObjectParameter("P_CURRENCY", typeof(string));
            }
            ObjectParameter PROPERTIE_IDParameter;
            if (PROPERTIE_ID.HasValue)
            {
                PROPERTIE_IDParameter = new ObjectParameter("PROPERTIE_ID", PROPERTIE_ID);
            }
            else
            {
                PROPERTIE_IDParameter = new ObjectParameter("PROPERTIE_ID", typeof(decimal?));
            }
            return base.ExecuteFunction<SPALLPROPERTIESBYCURRENCYResult>("REALESTATEEntities_ora.SPGETPROPERTIESBYID", P_CURRENCYParameter, PROPERTIE_IDParameter);
        }

        #endregion
    }

    #endregion
}

namespace REALESTATEModel_ora
{

    /// <summary>
    /// There are no comments for REALESTATEModel_ora.AgentInfo in the schema.
    /// </summary>
    /// <KeyProperties>
    /// AgentId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="REALESTATEModel_ora", Name="AgentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AgentInfo : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AgentInfo object.
        /// </summary>
        /// <param name="agentId">Initial value of AgentId.</param>
        public static AgentInfo CreateAgentInfo(decimal agentId)
        {
            AgentInfo agentInfo = new AgentInfo();
            agentInfo.AgentId = agentId;
            return agentInfo;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for AgentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AgentId
        {
            get
            {
                decimal value = _AgentId;
                OnGetAgentId(ref value);
                return value;
            }
            set
            {
                if (_AgentId != value)
                {
                  OnAgentIdChanging(ref value);
                  ReportPropertyChanging("AgentId");
                  _AgentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgentId");
                  OnAgentIdChanged();
              }
            }
        }
        private decimal _AgentId;
        partial void OnGetAgentId(ref decimal value);
        partial void OnAgentIdChanging(ref decimal value);
        partial void OnAgentIdChanged();
    
        /// <summary>
        /// There are no comments for Agent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Agent
        {
            get
            {
                string value = _Agent;
                OnGetAgent(ref value);
                return value;
            }
            set
            {
                if (_Agent != value)
                {
                  OnAgentChanging(ref value);
                  ReportPropertyChanging("Agent");
                  _Agent = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Agent");
                  OnAgentChanged();
              }
            }
        }
        private string _Agent;
        partial void OnGetAgent(ref string value);
        partial void OnAgentChanging(ref string value);
        partial void OnAgentChanged();
    
        /// <summary>
        /// There are no comments for NationalNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? NationalNumber
        {
            get
            {
                decimal? value = _NationalNumber;
                OnGetNationalNumber(ref value);
                return value;
            }
            set
            {
                if (_NationalNumber != value)
                {
                  OnNationalNumberChanging(ref value);
                  ReportPropertyChanging("NationalNumber");
                  _NationalNumber = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NationalNumber");
                  OnNationalNumberChanged();
              }
            }
        }
        private decimal? _NationalNumber;
        partial void OnGetNationalNumber(ref decimal? value);
        partial void OnNationalNumberChanging(ref decimal? value);
        partial void OnNationalNumberChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? PhoneNumber
        {
            get
            {
                decimal? value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private decimal? _PhoneNumber;
        partial void OnGetPhoneNumber(ref decimal? value);
        partial void OnPhoneNumberChanging(ref decimal? value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for WhatsappInk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WhatsappInk
        {
            get
            {
                string value = _WhatsappInk;
                OnGetWhatsappInk(ref value);
                return value;
            }
            set
            {
                if (_WhatsappInk != value)
                {
                  OnWhatsappInkChanging(ref value);
                  ReportPropertyChanging("WhatsappInk");
                  _WhatsappInk = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WhatsappInk");
                  OnWhatsappInkChanged();
              }
            }
        }
        private string _WhatsappInk;
        partial void OnGetWhatsappInk(ref string value);
        partial void OnWhatsappInkChanging(ref string value);
        partial void OnWhatsappInkChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Properties in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("REALESTATEModel_ora", "SYS_C007817", "Properties")]
        public virtual EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Property>("REALESTATEModel_ora.SYS_C007817", "Properties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Property>("REALESTATEModel_ora.SYS_C007817", "Properties", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for REALESTATEModel_ora.Category in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CategoryId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="REALESTATEModel_ora", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of CategoryId.</param>
        public static Category CreateCategory(decimal categoryId)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            return category;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CategoryId
        {
            get
            {
                decimal value = _CategoryId;
                OnGetCategoryId(ref value);
                return value;
            }
            set
            {
                if (_CategoryId != value)
                {
                  OnCategoryIdChanging(ref value);
                  ReportPropertyChanging("CategoryId");
                  _CategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CategoryId");
                  OnCategoryIdChanged();
              }
            }
        }
        private decimal _CategoryId;
        partial void OnGetCategoryId(ref decimal value);
        partial void OnCategoryIdChanging(ref decimal value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for CategoryName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CategoryName
        {
            get
            {
                string value = _CategoryName;
                OnGetCategoryName(ref value);
                return value;
            }
            set
            {
                if (_CategoryName != value)
                {
                  OnCategoryNameChanging(ref value);
                  ReportPropertyChanging("CategoryName");
                  _CategoryName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CategoryName");
                  OnCategoryNameChanged();
              }
            }
        }
        private string _CategoryName;
        partial void OnGetCategoryName(ref string value);
        partial void OnCategoryNameChanging(ref string value);
        partial void OnCategoryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Properties in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("REALESTATEModel_ora", "SYS_C007816", "Properties")]
        public virtual EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Property>("REALESTATEModel_ora.SYS_C007816", "Properties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Property>("REALESTATEModel_ora.SYS_C007816", "Properties", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for REALESTATEModel_ora.CompanyInfo in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="REALESTATEModel_ora", Name="CompanyInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyInfo : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CompanyInfo object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static CompanyInfo CreateCompanyInfo(decimal id)
        {
            CompanyInfo companyInfo = new CompanyInfo();
            companyInfo.Id = id;
            return companyInfo;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Id
        {
            get
            {
                decimal value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private decimal _Id;
        partial void OnGetId(ref decimal value);
        partial void OnIdChanging(ref decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CeoName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CeoName
        {
            get
            {
                string value = _CeoName;
                OnGetCeoName(ref value);
                return value;
            }
            set
            {
                if (_CeoName != value)
                {
                  OnCeoNameChanging(ref value);
                  ReportPropertyChanging("CeoName");
                  _CeoName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CeoName");
                  OnCeoNameChanged();
              }
            }
        }
        private string _CeoName;
        partial void OnGetCeoName(ref string value);
        partial void OnCeoNameChanging(ref string value);
        partial void OnCeoNameChanged();
    
        /// <summary>
        /// There are no comments for CompanyName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CompanyName
        {
            get
            {
                string value = _CompanyName;
                OnGetCompanyName(ref value);
                return value;
            }
            set
            {
                if (_CompanyName != value)
                {
                  OnCompanyNameChanging(ref value);
                  ReportPropertyChanging("CompanyName");
                  _CompanyName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CompanyName");
                  OnCompanyNameChanged();
              }
            }
        }
        private string _CompanyName;
        partial void OnGetCompanyName(ref string value);
        partial void OnCompanyNameChanging(ref string value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// There are no comments for ComapnyLocationLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ComapnyLocationLink
        {
            get
            {
                string value = _ComapnyLocationLink;
                OnGetComapnyLocationLink(ref value);
                return value;
            }
            set
            {
                if (_ComapnyLocationLink != value)
                {
                  OnComapnyLocationLinkChanging(ref value);
                  ReportPropertyChanging("ComapnyLocationLink");
                  _ComapnyLocationLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComapnyLocationLink");
                  OnComapnyLocationLinkChanged();
              }
            }
        }
        private string _ComapnyLocationLink;
        partial void OnGetComapnyLocationLink(ref string value);
        partial void OnComapnyLocationLinkChanging(ref string value);
        partial void OnComapnyLocationLinkChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? PhoneNumber
        {
            get
            {
                decimal? value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private decimal? _PhoneNumber;
        partial void OnGetPhoneNumber(ref decimal? value);
        partial void OnPhoneNumberChanging(ref decimal? value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for FacebookLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FacebookLink
        {
            get
            {
                string value = _FacebookLink;
                OnGetFacebookLink(ref value);
                return value;
            }
            set
            {
                if (_FacebookLink != value)
                {
                  OnFacebookLinkChanging(ref value);
                  ReportPropertyChanging("FacebookLink");
                  _FacebookLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FacebookLink");
                  OnFacebookLinkChanged();
              }
            }
        }
        private string _FacebookLink;
        partial void OnGetFacebookLink(ref string value);
        partial void OnFacebookLinkChanging(ref string value);
        partial void OnFacebookLinkChanged();
    
        /// <summary>
        /// There are no comments for InstagramLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string InstagramLink
        {
            get
            {
                string value = _InstagramLink;
                OnGetInstagramLink(ref value);
                return value;
            }
            set
            {
                if (_InstagramLink != value)
                {
                  OnInstagramLinkChanging(ref value);
                  ReportPropertyChanging("InstagramLink");
                  _InstagramLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InstagramLink");
                  OnInstagramLinkChanged();
              }
            }
        }
        private string _InstagramLink;
        partial void OnGetInstagramLink(ref string value);
        partial void OnInstagramLinkChanging(ref string value);
        partial void OnInstagramLinkChanged();
    
        /// <summary>
        /// There are no comments for TwitterLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TwitterLink
        {
            get
            {
                string value = _TwitterLink;
                OnGetTwitterLink(ref value);
                return value;
            }
            set
            {
                if (_TwitterLink != value)
                {
                  OnTwitterLinkChanging(ref value);
                  ReportPropertyChanging("TwitterLink");
                  _TwitterLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TwitterLink");
                  OnTwitterLinkChanged();
              }
            }
        }
        private string _TwitterLink;
        partial void OnGetTwitterLink(ref string value);
        partial void OnTwitterLinkChanging(ref string value);
        partial void OnTwitterLinkChanged();
    
        /// <summary>
        /// There are no comments for LinkedinLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LinkedinLink
        {
            get
            {
                string value = _LinkedinLink;
                OnGetLinkedinLink(ref value);
                return value;
            }
            set
            {
                if (_LinkedinLink != value)
                {
                  OnLinkedinLinkChanging(ref value);
                  ReportPropertyChanging("LinkedinLink");
                  _LinkedinLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LinkedinLink");
                  OnLinkedinLinkChanged();
              }
            }
        }
        private string _LinkedinLink;
        partial void OnGetLinkedinLink(ref string value);
        partial void OnLinkedinLinkChanging(ref string value);
        partial void OnLinkedinLinkChanged();
    
        /// <summary>
        /// There are no comments for YoutubeLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string YoutubeLink
        {
            get
            {
                string value = _YoutubeLink;
                OnGetYoutubeLink(ref value);
                return value;
            }
            set
            {
                if (_YoutubeLink != value)
                {
                  OnYoutubeLinkChanging(ref value);
                  ReportPropertyChanging("YoutubeLink");
                  _YoutubeLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("YoutubeLink");
                  OnYoutubeLinkChanged();
              }
            }
        }
        private string _YoutubeLink;
        partial void OnGetYoutubeLink(ref string value);
        partial void OnYoutubeLinkChanging(ref string value);
        partial void OnYoutubeLinkChanged();
    
        /// <summary>
        /// There are no comments for ComapnyVideoLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ComapnyVideoLink
        {
            get
            {
                string value = _ComapnyVideoLink;
                OnGetComapnyVideoLink(ref value);
                return value;
            }
            set
            {
                if (_ComapnyVideoLink != value)
                {
                  OnComapnyVideoLinkChanging(ref value);
                  ReportPropertyChanging("ComapnyVideoLink");
                  _ComapnyVideoLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComapnyVideoLink");
                  OnComapnyVideoLinkChanged();
              }
            }
        }
        private string _ComapnyVideoLink;
        partial void OnGetComapnyVideoLink(ref string value);
        partial void OnComapnyVideoLinkChanging(ref string value);
        partial void OnComapnyVideoLinkChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for REALESTATEModel_ora.Property in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IdProperties
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="REALESTATEModel_ora", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="idProperties">Initial value of IdProperties.</param>
        public static Property CreateProperty(decimal idProperties)
        {
            Property property = new Property();
            property.IdProperties = idProperties;
            return property;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IdProperties in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal IdProperties
        {
            get
            {
                decimal value = _IdProperties;
                OnGetIdProperties(ref value);
                return value;
            }
            set
            {
                if (_IdProperties != value)
                {
                  OnIdPropertiesChanging(ref value);
                  ReportPropertyChanging("IdProperties");
                  _IdProperties = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdProperties");
                  OnIdPropertiesChanged();
              }
            }
        }
        private decimal _IdProperties;
        partial void OnGetIdProperties(ref decimal value);
        partial void OnIdPropertiesChanging(ref decimal value);
        partial void OnIdPropertiesChanged();
    
        /// <summary>
        /// There are no comments for CategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? CategoryId
        {
            get
            {
                decimal? value = _CategoryId;
                OnGetCategoryId(ref value);
                return value;
            }
            set
            {
                if (_CategoryId != value)
                {
                  OnCategoryIdChanging(ref value);
                  ReportPropertyChanging("CategoryId");
                  _CategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CategoryId");
                  OnCategoryIdChanged();
              }
            }
        }
        private decimal? _CategoryId;
        partial void OnGetCategoryId(ref decimal? value);
        partial void OnCategoryIdChanging(ref decimal? value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for ImagePath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ImagePath
        {
            get
            {
                string value = _ImagePath;
                OnGetImagePath(ref value);
                return value;
            }
            set
            {
                if (_ImagePath != value)
                {
                  OnImagePathChanging(ref value);
                  ReportPropertyChanging("ImagePath");
                  _ImagePath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImagePath");
                  OnImagePathChanged();
              }
            }
        }
        private string _ImagePath;
        partial void OnGetImagePath(ref string value);
        partial void OnImagePathChanging(ref string value);
        partial void OnImagePathChanged();
    
        /// <summary>
        /// There are no comments for PropertiesType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PropertiesType
        {
            get
            {
                string value = _PropertiesType;
                OnGetPropertiesType(ref value);
                return value;
            }
            set
            {
                if (_PropertiesType != value)
                {
                  OnPropertiesTypeChanging(ref value);
                  ReportPropertyChanging("PropertiesType");
                  _PropertiesType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PropertiesType");
                  OnPropertiesTypeChanged();
              }
            }
        }
        private string _PropertiesType;
        partial void OnGetPropertiesType(ref string value);
        partial void OnPropertiesTypeChanging(ref string value);
        partial void OnPropertiesTypeChanged();
    
        /// <summary>
        /// There are no comments for OrginatorID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string OrginatorID
        {
            get
            {
                string value = _OrginatorID;
                OnGetOrginatorID(ref value);
                return value;
            }
            set
            {
                if (_OrginatorID != value)
                {
                  OnOrginatorIDChanging(ref value);
                  ReportPropertyChanging("OrginatorID");
                  _OrginatorID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrginatorID");
                  OnOrginatorIDChanged();
              }
            }
        }
        private string _OrginatorID;
        partial void OnGetOrginatorID(ref string value);
        partial void OnOrginatorIDChanging(ref string value);
        partial void OnOrginatorIDChanged();
    
        /// <summary>
        /// There are no comments for AgentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? AgentId
        {
            get
            {
                decimal? value = _AgentId;
                OnGetAgentId(ref value);
                return value;
            }
            set
            {
                if (_AgentId != value)
                {
                  OnAgentIdChanging(ref value);
                  ReportPropertyChanging("AgentId");
                  _AgentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgentId");
                  OnAgentIdChanged();
              }
            }
        }
        private decimal? _AgentId;
        partial void OnGetAgentId(ref decimal? value);
        partial void OnAgentIdChanging(ref decimal? value);
        partial void OnAgentIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Category in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("REALESTATEModel_ora", "SYS_C007816", "Category")]
        public virtual Category Category
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("REALESTATEModel_ora.SYS_C007816", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("REALESTATEModel_ora.SYS_C007816", "Category").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Category in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("REALESTATEModel_ora.SYS_C007816", "Category");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Category>("REALESTATEModel_ora.SYS_C007816", "Category", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Category>("REALESTATEModel_ora.SYS_C007816", "Category").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AgentInfo in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("REALESTATEModel_ora", "SYS_C007817", "AgentInfo")]
        public virtual AgentInfo AgentInfo
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AgentInfo>("REALESTATEModel_ora.SYS_C007817", "AgentInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AgentInfo>("REALESTATEModel_ora.SYS_C007817", "AgentInfo").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AgentInfo in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AgentInfo> AgentInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AgentInfo>("REALESTATEModel_ora.SYS_C007817", "AgentInfo");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AgentInfo>("REALESTATEModel_ora.SYS_C007817", "AgentInfo", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AgentInfo>("REALESTATEModel_ora.SYS_C007817", "AgentInfo").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PropertiesInfos in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("REALESTATEModel_ora", "SYS_C007818", "PropertiesInfos")]
        public virtual EntityCollection<PropertiesInfo> PropertiesInfos
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<PropertiesInfo>("REALESTATEModel_ora.SYS_C007818", "PropertiesInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<PropertiesInfo>("REALESTATEModel_ora.SYS_C007818", "PropertiesInfos", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for REALESTATEModel_ora.PropertiesInfo in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="REALESTATEModel_ora", Name="PropertiesInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertiesInfo : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PropertiesInfo object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static PropertiesInfo CreatePropertiesInfo(decimal id)
        {
            PropertiesInfo propertiesInfo = new PropertiesInfo();
            propertiesInfo.Id = id;
            return propertiesInfo;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Id
        {
            get
            {
                decimal value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private decimal _Id;
        partial void OnGetId(ref decimal value);
        partial void OnIdChanging(ref decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for IdProperties in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? IdProperties
        {
            get
            {
                decimal? value = _IdProperties;
                OnGetIdProperties(ref value);
                return value;
            }
            set
            {
                if (_IdProperties != value)
                {
                  OnIdPropertiesChanging(ref value);
                  ReportPropertyChanging("IdProperties");
                  _IdProperties = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdProperties");
                  OnIdPropertiesChanged();
              }
            }
        }
        private decimal? _IdProperties;
        partial void OnGetIdProperties(ref decimal? value);
        partial void OnIdPropertiesChanging(ref decimal? value);
        partial void OnIdPropertiesChanged();
    
        /// <summary>
        /// There are no comments for Images in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Images
        {
            get
            {
                string value = _Images;
                OnGetImages(ref value);
                return value;
            }
            set
            {
                if (_Images != value)
                {
                  OnImagesChanging(ref value);
                  ReportPropertyChanging("Images");
                  _Images = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Images");
                  OnImagesChanged();
              }
            }
        }
        private string _Images;
        partial void OnGetImages(ref string value);
        partial void OnImagesChanging(ref string value);
        partial void OnImagesChanged();
    
        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for InfoPropertie in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string InfoPropertie
        {
            get
            {
                string value = _InfoPropertie;
                OnGetInfoPropertie(ref value);
                return value;
            }
            set
            {
                if (_InfoPropertie != value)
                {
                  OnInfoPropertieChanging(ref value);
                  ReportPropertyChanging("InfoPropertie");
                  _InfoPropertie = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InfoPropertie");
                  OnInfoPropertieChanged();
              }
            }
        }
        private string _InfoPropertie;
        partial void OnGetInfoPropertie(ref string value);
        partial void OnInfoPropertieChanging(ref string value);
        partial void OnInfoPropertieChanged();
    
        /// <summary>
        /// There are no comments for YearBuilt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? YearBuilt
        {
            get
            {
                decimal? value = _YearBuilt;
                OnGetYearBuilt(ref value);
                return value;
            }
            set
            {
                if (_YearBuilt != value)
                {
                  OnYearBuiltChanging(ref value);
                  ReportPropertyChanging("YearBuilt");
                  _YearBuilt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("YearBuilt");
                  OnYearBuiltChanged();
              }
            }
        }
        private decimal? _YearBuilt;
        partial void OnGetYearBuilt(ref decimal? value);
        partial void OnYearBuiltChanging(ref decimal? value);
        partial void OnYearBuiltChanged();
    
        /// <summary>
        /// There are no comments for Bedrooms in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Bedrooms
        {
            get
            {
                decimal? value = _Bedrooms;
                OnGetBedrooms(ref value);
                return value;
            }
            set
            {
                if (_Bedrooms != value)
                {
                  OnBedroomsChanging(ref value);
                  ReportPropertyChanging("Bedrooms");
                  _Bedrooms = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Bedrooms");
                  OnBedroomsChanged();
              }
            }
        }
        private decimal? _Bedrooms;
        partial void OnGetBedrooms(ref decimal? value);
        partial void OnBedroomsChanging(ref decimal? value);
        partial void OnBedroomsChanged();
    
        /// <summary>
        /// There are no comments for Bathrooms in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Bathrooms
        {
            get
            {
                decimal? value = _Bathrooms;
                OnGetBathrooms(ref value);
                return value;
            }
            set
            {
                if (_Bathrooms != value)
                {
                  OnBathroomsChanging(ref value);
                  ReportPropertyChanging("Bathrooms");
                  _Bathrooms = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Bathrooms");
                  OnBathroomsChanged();
              }
            }
        }
        private decimal? _Bathrooms;
        partial void OnGetBathrooms(ref decimal? value);
        partial void OnBathroomsChanging(ref decimal? value);
        partial void OnBathroomsChanged();
    
        /// <summary>
        /// There are no comments for Area in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Area
        {
            get
            {
                decimal? value = _Area;
                OnGetArea(ref value);
                return value;
            }
            set
            {
                if (_Area != value)
                {
                  OnAreaChanging(ref value);
                  ReportPropertyChanging("Area");
                  _Area = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Area");
                  OnAreaChanged();
              }
            }
        }
        private decimal? _Area;
        partial void OnGetArea(ref decimal? value);
        partial void OnAreaChanging(ref decimal? value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// There are no comments for Floor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Floor
        {
            get
            {
                decimal? value = _Floor;
                OnGetFloor(ref value);
                return value;
            }
            set
            {
                if (_Floor != value)
                {
                  OnFloorChanging(ref value);
                  ReportPropertyChanging("Floor");
                  _Floor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Floor");
                  OnFloorChanged();
              }
            }
        }
        private decimal? _Floor;
        partial void OnGetFloor(ref decimal? value);
        partial void OnFloorChanging(ref decimal? value);
        partial void OnFloorChanged();
    
        /// <summary>
        /// There are no comments for Parking in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Parking
        {
            get
            {
                decimal? value = _Parking;
                OnGetParking(ref value);
                return value;
            }
            set
            {
                if (_Parking != value)
                {
                  OnParkingChanging(ref value);
                  ReportPropertyChanging("Parking");
                  _Parking = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Parking");
                  OnParkingChanged();
              }
            }
        }
        private decimal? _Parking;
        partial void OnGetParking(ref decimal? value);
        partial void OnParkingChanging(ref decimal? value);
        partial void OnParkingChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Price
        {
            get
            {
                decimal? value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private decimal? _Price;
        partial void OnGetPrice(ref decimal? value);
        partial void OnPriceChanging(ref decimal? value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// There are no comments for Currency in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Currency
        {
            get
            {
                string value = _Currency;
                OnGetCurrency(ref value);
                return value;
            }
            set
            {
                if (_Currency != value)
                {
                  OnCurrencyChanging(ref value);
                  ReportPropertyChanging("Currency");
                  _Currency = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Currency");
                  OnCurrencyChanged();
              }
            }
        }
        private string _Currency;
        partial void OnGetCurrency(ref string value);
        partial void OnCurrencyChanging(ref string value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// There are no comments for PaymentMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PaymentMethod
        {
            get
            {
                string value = _PaymentMethod;
                OnGetPaymentMethod(ref value);
                return value;
            }
            set
            {
                if (_PaymentMethod != value)
                {
                  OnPaymentMethodChanging(ref value);
                  ReportPropertyChanging("PaymentMethod");
                  _PaymentMethod = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PaymentMethod");
                  OnPaymentMethodChanged();
              }
            }
        }
        private string _PaymentMethod;
        partial void OnGetPaymentMethod(ref string value);
        partial void OnPaymentMethodChanging(ref string value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// There are no comments for LongAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LongAddress
        {
            get
            {
                string value = _LongAddress;
                OnGetLongAddress(ref value);
                return value;
            }
            set
            {
                if (_LongAddress != value)
                {
                  OnLongAddressChanging(ref value);
                  ReportPropertyChanging("LongAddress");
                  _LongAddress = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LongAddress");
                  OnLongAddressChanged();
              }
            }
        }
        private string _LongAddress;
        partial void OnGetLongAddress(ref string value);
        partial void OnLongAddressChanging(ref string value);
        partial void OnLongAddressChanged();
    
        /// <summary>
        /// There are no comments for BuildingType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BuildingType
        {
            get
            {
                string value = _BuildingType;
                OnGetBuildingType(ref value);
                return value;
            }
            set
            {
                if (_BuildingType != value)
                {
                  OnBuildingTypeChanging(ref value);
                  ReportPropertyChanging("BuildingType");
                  _BuildingType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BuildingType");
                  OnBuildingTypeChanged();
              }
            }
        }
        private string _BuildingType;
        partial void OnGetBuildingType(ref string value);
        partial void OnBuildingTypeChanging(ref string value);
        partial void OnBuildingTypeChanged();
    
        /// <summary>
        /// There are no comments for DisplayType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DisplayType
        {
            get
            {
                string value = _DisplayType;
                OnGetDisplayType(ref value);
                return value;
            }
            set
            {
                if (_DisplayType != value)
                {
                  OnDisplayTypeChanging(ref value);
                  ReportPropertyChanging("DisplayType");
                  _DisplayType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DisplayType");
                  OnDisplayTypeChanged();
              }
            }
        }
        private string _DisplayType;
        partial void OnGetDisplayType(ref string value);
        partial void OnDisplayTypeChanging(ref string value);
        partial void OnDisplayTypeChanged();
    
        /// <summary>
        /// There are no comments for Furnishing in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Furnishing
        {
            get
            {
                string value = _Furnishing;
                OnGetFurnishing(ref value);
                return value;
            }
            set
            {
                if (_Furnishing != value)
                {
                  OnFurnishingChanging(ref value);
                  ReportPropertyChanging("Furnishing");
                  _Furnishing = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Furnishing");
                  OnFurnishingChanged();
              }
            }
        }
        private string _Furnishing;
        partial void OnGetFurnishing(ref string value);
        partial void OnFurnishingChanging(ref string value);
        partial void OnFurnishingChanged();
    
        /// <summary>
        /// There are no comments for PublichDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PublichDate
        {
            get
            {
                string value = _PublichDate;
                OnGetPublichDate(ref value);
                return value;
            }
            set
            {
                if (_PublichDate != value)
                {
                  OnPublichDateChanging(ref value);
                  ReportPropertyChanging("PublichDate");
                  _PublichDate = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PublichDate");
                  OnPublichDateChanged();
              }
            }
        }
        private string _PublichDate;
        partial void OnGetPublichDate(ref string value);
        partial void OnPublichDateChanging(ref string value);
        partial void OnPublichDateChanged();
    
        /// <summary>
        /// There are no comments for MapLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string MapLink
        {
            get
            {
                string value = _MapLink;
                OnGetMapLink(ref value);
                return value;
            }
            set
            {
                if (_MapLink != value)
                {
                  OnMapLinkChanging(ref value);
                  ReportPropertyChanging("MapLink");
                  _MapLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MapLink");
                  OnMapLinkChanged();
              }
            }
        }
        private string _MapLink;
        partial void OnGetMapLink(ref string value);
        partial void OnMapLinkChanging(ref string value);
        partial void OnMapLinkChanged();
    
        /// <summary>
        /// There are no comments for YoutubeVideoLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string YoutubeVideoLink
        {
            get
            {
                string value = _YoutubeVideoLink;
                OnGetYoutubeVideoLink(ref value);
                return value;
            }
            set
            {
                if (_YoutubeVideoLink != value)
                {
                  OnYoutubeVideoLinkChanging(ref value);
                  ReportPropertyChanging("YoutubeVideoLink");
                  _YoutubeVideoLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("YoutubeVideoLink");
                  OnYoutubeVideoLinkChanged();
              }
            }
        }
        private string _YoutubeVideoLink;
        partial void OnGetYoutubeVideoLink(ref string value);
        partial void OnYoutubeVideoLinkChanging(ref string value);
        partial void OnYoutubeVideoLinkChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Property in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("REALESTATEModel_ora", "SYS_C007818", "Property")]
        public virtual Property Property
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Property>("REALESTATEModel_ora.SYS_C007818", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Property>("REALESTATEModel_ora.SYS_C007818", "Property").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Property in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Property>("REALESTATEModel_ora.SYS_C007818", "Property");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Property>("REALESTATEModel_ora.SYS_C007818", "Property", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Property>("REALESTATEModel_ora.SYS_C007818", "Property").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for REALESTATEModel_ora.VALLPROPERTY in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// IdProperties
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="REALESTATEModel_ora", Name="VALLPROPERTY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VALLPROPERTY : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VALLPROPERTY object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="idProperties">Initial value of IdProperties.</param>
        public static VALLPROPERTY CreateVALLPROPERTY(decimal id, decimal idProperties)
        {
            VALLPROPERTY vALLPROPERTY = new VALLPROPERTY();
            vALLPROPERTY.Id = id;
            vALLPROPERTY.IdProperties = idProperties;
            return vALLPROPERTY;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Id
        {
            get
            {
                decimal value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private decimal _Id;
        partial void OnGetId(ref decimal value);
        partial void OnIdChanging(ref decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for PropertiesType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PropertiesType
        {
            get
            {
                string value = _PropertiesType;
                OnGetPropertiesType(ref value);
                return value;
            }
            set
            {
                if (_PropertiesType != value)
                {
                  OnPropertiesTypeChanging(ref value);
                  ReportPropertyChanging("PropertiesType");
                  _PropertiesType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PropertiesType");
                  OnPropertiesTypeChanged();
              }
            }
        }
        private string _PropertiesType;
        partial void OnGetPropertiesType(ref string value);
        partial void OnPropertiesTypeChanging(ref string value);
        partial void OnPropertiesTypeChanged();
    
        /// <summary>
        /// There are no comments for CategoryName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CategoryName
        {
            get
            {
                string value = _CategoryName;
                OnGetCategoryName(ref value);
                return value;
            }
            set
            {
                if (_CategoryName != value)
                {
                  OnCategoryNameChanging(ref value);
                  ReportPropertyChanging("CategoryName");
                  _CategoryName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CategoryName");
                  OnCategoryNameChanged();
              }
            }
        }
        private string _CategoryName;
        partial void OnGetCategoryName(ref string value);
        partial void OnCategoryNameChanging(ref string value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// There are no comments for ImagePath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ImagePath
        {
            get
            {
                string value = _ImagePath;
                OnGetImagePath(ref value);
                return value;
            }
            set
            {
                if (_ImagePath != value)
                {
                  OnImagePathChanging(ref value);
                  ReportPropertyChanging("ImagePath");
                  _ImagePath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImagePath");
                  OnImagePathChanged();
              }
            }
        }
        private string _ImagePath;
        partial void OnGetImagePath(ref string value);
        partial void OnImagePathChanging(ref string value);
        partial void OnImagePathChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for LongAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LongAddress
        {
            get
            {
                string value = _LongAddress;
                OnGetLongAddress(ref value);
                return value;
            }
            set
            {
                if (_LongAddress != value)
                {
                  OnLongAddressChanging(ref value);
                  ReportPropertyChanging("LongAddress");
                  _LongAddress = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LongAddress");
                  OnLongAddressChanged();
              }
            }
        }
        private string _LongAddress;
        partial void OnGetLongAddress(ref string value);
        partial void OnLongAddressChanging(ref string value);
        partial void OnLongAddressChanged();
    
        /// <summary>
        /// There are no comments for IdProperties in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal IdProperties
        {
            get
            {
                decimal value = _IdProperties;
                OnGetIdProperties(ref value);
                return value;
            }
            set
            {
                if (_IdProperties != value)
                {
                  OnIdPropertiesChanging(ref value);
                  ReportPropertyChanging("IdProperties");
                  _IdProperties = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdProperties");
                  OnIdPropertiesChanged();
              }
            }
        }
        private decimal _IdProperties;
        partial void OnGetIdProperties(ref decimal value);
        partial void OnIdPropertiesChanging(ref decimal value);
        partial void OnIdPropertiesChanged();
    
        /// <summary>
        /// There are no comments for YearBuilt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? YearBuilt
        {
            get
            {
                decimal? value = _YearBuilt;
                OnGetYearBuilt(ref value);
                return value;
            }
            set
            {
                if (_YearBuilt != value)
                {
                  OnYearBuiltChanging(ref value);
                  ReportPropertyChanging("YearBuilt");
                  _YearBuilt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("YearBuilt");
                  OnYearBuiltChanged();
              }
            }
        }
        private decimal? _YearBuilt;
        partial void OnGetYearBuilt(ref decimal? value);
        partial void OnYearBuiltChanging(ref decimal? value);
        partial void OnYearBuiltChanged();
    
        /// <summary>
        /// There are no comments for Floor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Floor
        {
            get
            {
                decimal? value = _Floor;
                OnGetFloor(ref value);
                return value;
            }
            set
            {
                if (_Floor != value)
                {
                  OnFloorChanging(ref value);
                  ReportPropertyChanging("Floor");
                  _Floor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Floor");
                  OnFloorChanged();
              }
            }
        }
        private decimal? _Floor;
        partial void OnGetFloor(ref decimal? value);
        partial void OnFloorChanging(ref decimal? value);
        partial void OnFloorChanged();
    
        /// <summary>
        /// There are no comments for Area in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Area
        {
            get
            {
                decimal? value = _Area;
                OnGetArea(ref value);
                return value;
            }
            set
            {
                if (_Area != value)
                {
                  OnAreaChanging(ref value);
                  ReportPropertyChanging("Area");
                  _Area = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Area");
                  OnAreaChanged();
              }
            }
        }
        private decimal? _Area;
        partial void OnGetArea(ref decimal? value);
        partial void OnAreaChanging(ref decimal? value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// There are no comments for Bedrooms in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Bedrooms
        {
            get
            {
                decimal? value = _Bedrooms;
                OnGetBedrooms(ref value);
                return value;
            }
            set
            {
                if (_Bedrooms != value)
                {
                  OnBedroomsChanging(ref value);
                  ReportPropertyChanging("Bedrooms");
                  _Bedrooms = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Bedrooms");
                  OnBedroomsChanged();
              }
            }
        }
        private decimal? _Bedrooms;
        partial void OnGetBedrooms(ref decimal? value);
        partial void OnBedroomsChanging(ref decimal? value);
        partial void OnBedroomsChanged();
    
        /// <summary>
        /// There are no comments for Bathrooms in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Bathrooms
        {
            get
            {
                decimal? value = _Bathrooms;
                OnGetBathrooms(ref value);
                return value;
            }
            set
            {
                if (_Bathrooms != value)
                {
                  OnBathroomsChanging(ref value);
                  ReportPropertyChanging("Bathrooms");
                  _Bathrooms = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Bathrooms");
                  OnBathroomsChanged();
              }
            }
        }
        private decimal? _Bathrooms;
        partial void OnGetBathrooms(ref decimal? value);
        partial void OnBathroomsChanging(ref decimal? value);
        partial void OnBathroomsChanged();
    
        /// <summary>
        /// There are no comments for Parking in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Parking
        {
            get
            {
                decimal? value = _Parking;
                OnGetParking(ref value);
                return value;
            }
            set
            {
                if (_Parking != value)
                {
                  OnParkingChanging(ref value);
                  ReportPropertyChanging("Parking");
                  _Parking = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Parking");
                  OnParkingChanged();
              }
            }
        }
        private decimal? _Parking;
        partial void OnGetParking(ref decimal? value);
        partial void OnParkingChanging(ref decimal? value);
        partial void OnParkingChanged();
    
        /// <summary>
        /// There are no comments for PARKINGAVAILABLE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PARKINGAVAILABLE
        {
            get
            {
                string value = _PARKINGAVAILABLE;
                OnGetPARKINGAVAILABLE(ref value);
                return value;
            }
            set
            {
                if (_PARKINGAVAILABLE != value)
                {
                  OnPARKINGAVAILABLEChanging(ref value);
                  ReportPropertyChanging("PARKINGAVAILABLE");
                  _PARKINGAVAILABLE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PARKINGAVAILABLE");
                  OnPARKINGAVAILABLEChanged();
              }
            }
        }
        private string _PARKINGAVAILABLE;
        partial void OnGetPARKINGAVAILABLE(ref string value);
        partial void OnPARKINGAVAILABLEChanging(ref string value);
        partial void OnPARKINGAVAILABLEChanged();
    
        /// <summary>
        /// There are no comments for InfoPropertie in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string InfoPropertie
        {
            get
            {
                string value = _InfoPropertie;
                OnGetInfoPropertie(ref value);
                return value;
            }
            set
            {
                if (_InfoPropertie != value)
                {
                  OnInfoPropertieChanging(ref value);
                  ReportPropertyChanging("InfoPropertie");
                  _InfoPropertie = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InfoPropertie");
                  OnInfoPropertieChanged();
              }
            }
        }
        private string _InfoPropertie;
        partial void OnGetInfoPropertie(ref string value);
        partial void OnInfoPropertieChanging(ref string value);
        partial void OnInfoPropertieChanged();
    
        /// <summary>
        /// There are no comments for Images in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Images
        {
            get
            {
                string value = _Images;
                OnGetImages(ref value);
                return value;
            }
            set
            {
                if (_Images != value)
                {
                  OnImagesChanging(ref value);
                  ReportPropertyChanging("Images");
                  _Images = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Images");
                  OnImagesChanged();
              }
            }
        }
        private string _Images;
        partial void OnGetImages(ref string value);
        partial void OnImagesChanging(ref string value);
        partial void OnImagesChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Price
        {
            get
            {
                decimal? value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private decimal? _Price;
        partial void OnGetPrice(ref decimal? value);
        partial void OnPriceChanging(ref decimal? value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// There are no comments for PaymentMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PaymentMethod
        {
            get
            {
                string value = _PaymentMethod;
                OnGetPaymentMethod(ref value);
                return value;
            }
            set
            {
                if (_PaymentMethod != value)
                {
                  OnPaymentMethodChanging(ref value);
                  ReportPropertyChanging("PaymentMethod");
                  _PaymentMethod = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PaymentMethod");
                  OnPaymentMethodChanged();
              }
            }
        }
        private string _PaymentMethod;
        partial void OnGetPaymentMethod(ref string value);
        partial void OnPaymentMethodChanging(ref string value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// There are no comments for Currency in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Currency
        {
            get
            {
                string value = _Currency;
                OnGetCurrency(ref value);
                return value;
            }
            set
            {
                if (_Currency != value)
                {
                  OnCurrencyChanging(ref value);
                  ReportPropertyChanging("Currency");
                  _Currency = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Currency");
                  OnCurrencyChanged();
              }
            }
        }
        private string _Currency;
        partial void OnGetCurrency(ref string value);
        partial void OnCurrencyChanging(ref string value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// There are no comments for BuildingType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BuildingType
        {
            get
            {
                string value = _BuildingType;
                OnGetBuildingType(ref value);
                return value;
            }
            set
            {
                if (_BuildingType != value)
                {
                  OnBuildingTypeChanging(ref value);
                  ReportPropertyChanging("BuildingType");
                  _BuildingType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BuildingType");
                  OnBuildingTypeChanged();
              }
            }
        }
        private string _BuildingType;
        partial void OnGetBuildingType(ref string value);
        partial void OnBuildingTypeChanging(ref string value);
        partial void OnBuildingTypeChanged();
    
        /// <summary>
        /// There are no comments for DisplayType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DisplayType
        {
            get
            {
                string value = _DisplayType;
                OnGetDisplayType(ref value);
                return value;
            }
            set
            {
                if (_DisplayType != value)
                {
                  OnDisplayTypeChanging(ref value);
                  ReportPropertyChanging("DisplayType");
                  _DisplayType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DisplayType");
                  OnDisplayTypeChanged();
              }
            }
        }
        private string _DisplayType;
        partial void OnGetDisplayType(ref string value);
        partial void OnDisplayTypeChanging(ref string value);
        partial void OnDisplayTypeChanged();
    
        /// <summary>
        /// There are no comments for Furnishing in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Furnishing
        {
            get
            {
                string value = _Furnishing;
                OnGetFurnishing(ref value);
                return value;
            }
            set
            {
                if (_Furnishing != value)
                {
                  OnFurnishingChanging(ref value);
                  ReportPropertyChanging("Furnishing");
                  _Furnishing = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Furnishing");
                  OnFurnishingChanged();
              }
            }
        }
        private string _Furnishing;
        partial void OnGetFurnishing(ref string value);
        partial void OnFurnishingChanging(ref string value);
        partial void OnFurnishingChanged();
    
        /// <summary>
        /// There are no comments for PublichDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PublichDate
        {
            get
            {
                string value = _PublichDate;
                OnGetPublichDate(ref value);
                return value;
            }
            set
            {
                if (_PublichDate != value)
                {
                  OnPublichDateChanging(ref value);
                  ReportPropertyChanging("PublichDate");
                  _PublichDate = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PublichDate");
                  OnPublichDateChanged();
              }
            }
        }
        private string _PublichDate;
        partial void OnGetPublichDate(ref string value);
        partial void OnPublichDateChanging(ref string value);
        partial void OnPublichDateChanged();
    
        /// <summary>
        /// There are no comments for MapLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string MapLink
        {
            get
            {
                string value = _MapLink;
                OnGetMapLink(ref value);
                return value;
            }
            set
            {
                if (_MapLink != value)
                {
                  OnMapLinkChanging(ref value);
                  ReportPropertyChanging("MapLink");
                  _MapLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MapLink");
                  OnMapLinkChanged();
              }
            }
        }
        private string _MapLink;
        partial void OnGetMapLink(ref string value);
        partial void OnMapLinkChanging(ref string value);
        partial void OnMapLinkChanged();
    
        /// <summary>
        /// There are no comments for YoutubeVideoLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string YoutubeVideoLink
        {
            get
            {
                string value = _YoutubeVideoLink;
                OnGetYoutubeVideoLink(ref value);
                return value;
            }
            set
            {
                if (_YoutubeVideoLink != value)
                {
                  OnYoutubeVideoLinkChanging(ref value);
                  ReportPropertyChanging("YoutubeVideoLink");
                  _YoutubeVideoLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("YoutubeVideoLink");
                  OnYoutubeVideoLinkChanged();
              }
            }
        }
        private string _YoutubeVideoLink;
        partial void OnGetYoutubeVideoLink(ref string value);
        partial void OnYoutubeVideoLinkChanging(ref string value);
        partial void OnYoutubeVideoLinkChanged();
    
        /// <summary>
        /// There are no comments for Agent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Agent
        {
            get
            {
                string value = _Agent;
                OnGetAgent(ref value);
                return value;
            }
            set
            {
                if (_Agent != value)
                {
                  OnAgentChanging(ref value);
                  ReportPropertyChanging("Agent");
                  _Agent = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Agent");
                  OnAgentChanged();
              }
            }
        }
        private string _Agent;
        partial void OnGetAgent(ref string value);
        partial void OnAgentChanging(ref string value);
        partial void OnAgentChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? PhoneNumber
        {
            get
            {
                decimal? value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private decimal? _PhoneNumber;
        partial void OnGetPhoneNumber(ref decimal? value);
        partial void OnPhoneNumberChanging(ref decimal? value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for WhatsappInk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WhatsappInk
        {
            get
            {
                string value = _WhatsappInk;
                OnGetWhatsappInk(ref value);
                return value;
            }
            set
            {
                if (_WhatsappInk != value)
                {
                  OnWhatsappInkChanging(ref value);
                  ReportPropertyChanging("WhatsappInk");
                  _WhatsappInk = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WhatsappInk");
                  OnWhatsappInkChanged();
              }
            }
        }
        private string _WhatsappInk;
        partial void OnGetWhatsappInk(ref string value);
        partial void OnWhatsappInkChanging(ref string value);
        partial void OnWhatsappInkChanged();

        #endregion
    }

}

namespace REALESTATEModel_ora
{

    /// <summary>
    /// There are no comments for REALESTATEModel_ora.SPALLPROPERTIESBYCURRENCYResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="REALESTATEModel_ora", Name="SPALLPROPERTIESBYCURRENCYResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SPALLPROPERTIESBYCURRENCYResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SPALLPROPERTIESBYCURRENCYResult object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="idProperties">Initial value of IdProperties.</param>
        public static SPALLPROPERTIESBYCURRENCYResult CreateSPALLPROPERTIESBYCURRENCYResult(decimal id, decimal idProperties)
        {
            SPALLPROPERTIESBYCURRENCYResult sPALLPROPERTIESBYCURRENCYResult = new SPALLPROPERTIESBYCURRENCYResult();
            sPALLPROPERTIESBYCURRENCYResult.Id = id;
            sPALLPROPERTIESBYCURRENCYResult.IdProperties = idProperties;
            return sPALLPROPERTIESBYCURRENCYResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Id
        {
            get
            {
                decimal value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private decimal _Id;
        partial void OnGetId(ref decimal value);
        partial void OnIdChanging(ref decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for PropertiesType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PropertiesType
        {
            get
            {
                string value = _PropertiesType;
                OnGetPropertiesType(ref value);
                return value;
            }
            set
            {
                if (_PropertiesType != value)
                {
                  OnPropertiesTypeChanging(ref value);
                  ReportPropertyChanging("PropertiesType");
                  _PropertiesType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PropertiesType");
                  OnPropertiesTypeChanged();
              }
            }
        }
        private string _PropertiesType;
        partial void OnGetPropertiesType(ref string value);
        partial void OnPropertiesTypeChanging(ref string value);
        partial void OnPropertiesTypeChanged();
    
        /// <summary>
        /// There are no comments for CategoryName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CategoryName
        {
            get
            {
                string value = _CategoryName;
                OnGetCategoryName(ref value);
                return value;
            }
            set
            {
                if (_CategoryName != value)
                {
                  OnCategoryNameChanging(ref value);
                  ReportPropertyChanging("CategoryName");
                  _CategoryName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CategoryName");
                  OnCategoryNameChanged();
              }
            }
        }
        private string _CategoryName;
        partial void OnGetCategoryName(ref string value);
        partial void OnCategoryNameChanging(ref string value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// There are no comments for ImagePath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ImagePath
        {
            get
            {
                string value = _ImagePath;
                OnGetImagePath(ref value);
                return value;
            }
            set
            {
                if (_ImagePath != value)
                {
                  OnImagePathChanging(ref value);
                  ReportPropertyChanging("ImagePath");
                  _ImagePath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImagePath");
                  OnImagePathChanged();
              }
            }
        }
        private string _ImagePath;
        partial void OnGetImagePath(ref string value);
        partial void OnImagePathChanging(ref string value);
        partial void OnImagePathChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for LongAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LongAddress
        {
            get
            {
                string value = _LongAddress;
                OnGetLongAddress(ref value);
                return value;
            }
            set
            {
                if (_LongAddress != value)
                {
                  OnLongAddressChanging(ref value);
                  ReportPropertyChanging("LongAddress");
                  _LongAddress = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LongAddress");
                  OnLongAddressChanged();
              }
            }
        }
        private string _LongAddress;
        partial void OnGetLongAddress(ref string value);
        partial void OnLongAddressChanging(ref string value);
        partial void OnLongAddressChanged();
    
        /// <summary>
        /// There are no comments for IdProperties in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal IdProperties
        {
            get
            {
                decimal value = _IdProperties;
                OnGetIdProperties(ref value);
                return value;
            }
            set
            {
                if (_IdProperties != value)
                {
                  OnIdPropertiesChanging(ref value);
                  ReportPropertyChanging("IdProperties");
                  _IdProperties = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdProperties");
                  OnIdPropertiesChanged();
              }
            }
        }
        private decimal _IdProperties;
        partial void OnGetIdProperties(ref decimal value);
        partial void OnIdPropertiesChanging(ref decimal value);
        partial void OnIdPropertiesChanged();
    
        /// <summary>
        /// There are no comments for YearBuilt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? YearBuilt
        {
            get
            {
                decimal? value = _YearBuilt;
                OnGetYearBuilt(ref value);
                return value;
            }
            set
            {
                if (_YearBuilt != value)
                {
                  OnYearBuiltChanging(ref value);
                  ReportPropertyChanging("YearBuilt");
                  _YearBuilt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("YearBuilt");
                  OnYearBuiltChanged();
              }
            }
        }
        private decimal? _YearBuilt;
        partial void OnGetYearBuilt(ref decimal? value);
        partial void OnYearBuiltChanging(ref decimal? value);
        partial void OnYearBuiltChanged();
    
        /// <summary>
        /// There are no comments for Floor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Floor
        {
            get
            {
                decimal? value = _Floor;
                OnGetFloor(ref value);
                return value;
            }
            set
            {
                if (_Floor != value)
                {
                  OnFloorChanging(ref value);
                  ReportPropertyChanging("Floor");
                  _Floor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Floor");
                  OnFloorChanged();
              }
            }
        }
        private decimal? _Floor;
        partial void OnGetFloor(ref decimal? value);
        partial void OnFloorChanging(ref decimal? value);
        partial void OnFloorChanged();
    
        /// <summary>
        /// There are no comments for Area in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Area
        {
            get
            {
                decimal? value = _Area;
                OnGetArea(ref value);
                return value;
            }
            set
            {
                if (_Area != value)
                {
                  OnAreaChanging(ref value);
                  ReportPropertyChanging("Area");
                  _Area = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Area");
                  OnAreaChanged();
              }
            }
        }
        private decimal? _Area;
        partial void OnGetArea(ref decimal? value);
        partial void OnAreaChanging(ref decimal? value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// There are no comments for Bedrooms in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Bedrooms
        {
            get
            {
                decimal? value = _Bedrooms;
                OnGetBedrooms(ref value);
                return value;
            }
            set
            {
                if (_Bedrooms != value)
                {
                  OnBedroomsChanging(ref value);
                  ReportPropertyChanging("Bedrooms");
                  _Bedrooms = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Bedrooms");
                  OnBedroomsChanged();
              }
            }
        }
        private decimal? _Bedrooms;
        partial void OnGetBedrooms(ref decimal? value);
        partial void OnBedroomsChanging(ref decimal? value);
        partial void OnBedroomsChanged();
    
        /// <summary>
        /// There are no comments for Bathrooms in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Bathrooms
        {
            get
            {
                decimal? value = _Bathrooms;
                OnGetBathrooms(ref value);
                return value;
            }
            set
            {
                if (_Bathrooms != value)
                {
                  OnBathroomsChanging(ref value);
                  ReportPropertyChanging("Bathrooms");
                  _Bathrooms = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Bathrooms");
                  OnBathroomsChanged();
              }
            }
        }
        private decimal? _Bathrooms;
        partial void OnGetBathrooms(ref decimal? value);
        partial void OnBathroomsChanging(ref decimal? value);
        partial void OnBathroomsChanged();
    
        /// <summary>
        /// There are no comments for Parking in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Parking
        {
            get
            {
                decimal? value = _Parking;
                OnGetParking(ref value);
                return value;
            }
            set
            {
                if (_Parking != value)
                {
                  OnParkingChanging(ref value);
                  ReportPropertyChanging("Parking");
                  _Parking = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Parking");
                  OnParkingChanged();
              }
            }
        }
        private decimal? _Parking;
        partial void OnGetParking(ref decimal? value);
        partial void OnParkingChanging(ref decimal? value);
        partial void OnParkingChanged();
    
        /// <summary>
        /// There are no comments for PARKINGAVAILABLE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PARKINGAVAILABLE
        {
            get
            {
                string value = _PARKINGAVAILABLE;
                OnGetPARKINGAVAILABLE(ref value);
                return value;
            }
            set
            {
                if (_PARKINGAVAILABLE != value)
                {
                  OnPARKINGAVAILABLEChanging(ref value);
                  ReportPropertyChanging("PARKINGAVAILABLE");
                  _PARKINGAVAILABLE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PARKINGAVAILABLE");
                  OnPARKINGAVAILABLEChanged();
              }
            }
        }
        private string _PARKINGAVAILABLE;
        partial void OnGetPARKINGAVAILABLE(ref string value);
        partial void OnPARKINGAVAILABLEChanging(ref string value);
        partial void OnPARKINGAVAILABLEChanged();
    
        /// <summary>
        /// There are no comments for InfoPropertie in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string InfoPropertie
        {
            get
            {
                string value = _InfoPropertie;
                OnGetInfoPropertie(ref value);
                return value;
            }
            set
            {
                if (_InfoPropertie != value)
                {
                  OnInfoPropertieChanging(ref value);
                  ReportPropertyChanging("InfoPropertie");
                  _InfoPropertie = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InfoPropertie");
                  OnInfoPropertieChanged();
              }
            }
        }
        private string _InfoPropertie;
        partial void OnGetInfoPropertie(ref string value);
        partial void OnInfoPropertieChanging(ref string value);
        partial void OnInfoPropertieChanged();
    
        /// <summary>
        /// There are no comments for Images in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Images
        {
            get
            {
                string value = _Images;
                OnGetImages(ref value);
                return value;
            }
            set
            {
                if (_Images != value)
                {
                  OnImagesChanging(ref value);
                  ReportPropertyChanging("Images");
                  _Images = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Images");
                  OnImagesChanged();
              }
            }
        }
        private string _Images;
        partial void OnGetImages(ref string value);
        partial void OnImagesChanging(ref string value);
        partial void OnImagesChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Price
        {
            get
            {
                decimal? value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private decimal? _Price;
        partial void OnGetPrice(ref decimal? value);
        partial void OnPriceChanging(ref decimal? value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// There are no comments for PaymentMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PaymentMethod
        {
            get
            {
                string value = _PaymentMethod;
                OnGetPaymentMethod(ref value);
                return value;
            }
            set
            {
                if (_PaymentMethod != value)
                {
                  OnPaymentMethodChanging(ref value);
                  ReportPropertyChanging("PaymentMethod");
                  _PaymentMethod = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PaymentMethod");
                  OnPaymentMethodChanged();
              }
            }
        }
        private string _PaymentMethod;
        partial void OnGetPaymentMethod(ref string value);
        partial void OnPaymentMethodChanging(ref string value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// There are no comments for Currency in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Currency
        {
            get
            {
                string value = _Currency;
                OnGetCurrency(ref value);
                return value;
            }
            set
            {
                if (_Currency != value)
                {
                  OnCurrencyChanging(ref value);
                  ReportPropertyChanging("Currency");
                  _Currency = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Currency");
                  OnCurrencyChanged();
              }
            }
        }
        private string _Currency;
        partial void OnGetCurrency(ref string value);
        partial void OnCurrencyChanging(ref string value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// There are no comments for BuildingType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BuildingType
        {
            get
            {
                string value = _BuildingType;
                OnGetBuildingType(ref value);
                return value;
            }
            set
            {
                if (_BuildingType != value)
                {
                  OnBuildingTypeChanging(ref value);
                  ReportPropertyChanging("BuildingType");
                  _BuildingType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BuildingType");
                  OnBuildingTypeChanged();
              }
            }
        }
        private string _BuildingType;
        partial void OnGetBuildingType(ref string value);
        partial void OnBuildingTypeChanging(ref string value);
        partial void OnBuildingTypeChanged();
    
        /// <summary>
        /// There are no comments for DisplayType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DisplayType
        {
            get
            {
                string value = _DisplayType;
                OnGetDisplayType(ref value);
                return value;
            }
            set
            {
                if (_DisplayType != value)
                {
                  OnDisplayTypeChanging(ref value);
                  ReportPropertyChanging("DisplayType");
                  _DisplayType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DisplayType");
                  OnDisplayTypeChanged();
              }
            }
        }
        private string _DisplayType;
        partial void OnGetDisplayType(ref string value);
        partial void OnDisplayTypeChanging(ref string value);
        partial void OnDisplayTypeChanged();
    
        /// <summary>
        /// There are no comments for Furnishing in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Furnishing
        {
            get
            {
                string value = _Furnishing;
                OnGetFurnishing(ref value);
                return value;
            }
            set
            {
                if (_Furnishing != value)
                {
                  OnFurnishingChanging(ref value);
                  ReportPropertyChanging("Furnishing");
                  _Furnishing = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Furnishing");
                  OnFurnishingChanged();
              }
            }
        }
        private string _Furnishing;
        partial void OnGetFurnishing(ref string value);
        partial void OnFurnishingChanging(ref string value);
        partial void OnFurnishingChanged();
    
        /// <summary>
        /// There are no comments for PublichDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PublichDate
        {
            get
            {
                string value = _PublichDate;
                OnGetPublichDate(ref value);
                return value;
            }
            set
            {
                if (_PublichDate != value)
                {
                  OnPublichDateChanging(ref value);
                  ReportPropertyChanging("PublichDate");
                  _PublichDate = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PublichDate");
                  OnPublichDateChanged();
              }
            }
        }
        private string _PublichDate;
        partial void OnGetPublichDate(ref string value);
        partial void OnPublichDateChanging(ref string value);
        partial void OnPublichDateChanged();
    
        /// <summary>
        /// There are no comments for MapLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string MapLink
        {
            get
            {
                string value = _MapLink;
                OnGetMapLink(ref value);
                return value;
            }
            set
            {
                if (_MapLink != value)
                {
                  OnMapLinkChanging(ref value);
                  ReportPropertyChanging("MapLink");
                  _MapLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MapLink");
                  OnMapLinkChanged();
              }
            }
        }
        private string _MapLink;
        partial void OnGetMapLink(ref string value);
        partial void OnMapLinkChanging(ref string value);
        partial void OnMapLinkChanged();
    
        /// <summary>
        /// There are no comments for YoutubeVideoLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string YoutubeVideoLink
        {
            get
            {
                string value = _YoutubeVideoLink;
                OnGetYoutubeVideoLink(ref value);
                return value;
            }
            set
            {
                if (_YoutubeVideoLink != value)
                {
                  OnYoutubeVideoLinkChanging(ref value);
                  ReportPropertyChanging("YoutubeVideoLink");
                  _YoutubeVideoLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("YoutubeVideoLink");
                  OnYoutubeVideoLinkChanged();
              }
            }
        }
        private string _YoutubeVideoLink;
        partial void OnGetYoutubeVideoLink(ref string value);
        partial void OnYoutubeVideoLinkChanging(ref string value);
        partial void OnYoutubeVideoLinkChanged();
    
        /// <summary>
        /// There are no comments for Agent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Agent
        {
            get
            {
                string value = _Agent;
                OnGetAgent(ref value);
                return value;
            }
            set
            {
                if (_Agent != value)
                {
                  OnAgentChanging(ref value);
                  ReportPropertyChanging("Agent");
                  _Agent = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Agent");
                  OnAgentChanged();
              }
            }
        }
        private string _Agent;
        partial void OnGetAgent(ref string value);
        partial void OnAgentChanging(ref string value);
        partial void OnAgentChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? PhoneNumber
        {
            get
            {
                decimal? value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private decimal? _PhoneNumber;
        partial void OnGetPhoneNumber(ref decimal? value);
        partial void OnPhoneNumberChanging(ref decimal? value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for WhatsappInk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WhatsappInk
        {
            get
            {
                string value = _WhatsappInk;
                OnGetWhatsappInk(ref value);
                return value;
            }
            set
            {
                if (_WhatsappInk != value)
                {
                  OnWhatsappInkChanging(ref value);
                  ReportPropertyChanging("WhatsappInk");
                  _WhatsappInk = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WhatsappInk");
                  OnWhatsappInkChanged();
              }
            }
        }
        private string _WhatsappInk;
        partial void OnGetWhatsappInk(ref string value);
        partial void OnWhatsappInkChanging(ref string value);
        partial void OnWhatsappInkChanged();

        #endregion
    }

}
